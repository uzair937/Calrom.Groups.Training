@using CustomRegionEditor.ViewModels
@model EditViewModel

<div class="container">
    <div class="edit-container flex-column">
        @if (Model.IsEditing)
        {
            <div class="model-id" modelId="@Model.CustomRegionGroupViewModel.ID" />
            <table class="info-table-header table" data-savechangesurl="@Url.Action("SaveChanges", "Home")">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Description</th>
                        <th scope="col">Regions</th>
                        <th scope="col">Save Changes</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Html.TextBoxFor(m => m.CustomRegionGroupViewModel.Name, new { placeholder = "Set Name", @class = "model-name form-control" })</td>
                        <td>@Html.TextBoxFor(m => m.CustomRegionGroupViewModel.Description, new { placeholder = "Set Description", @class = "model-description form-control" })</td>

                        @if (Model.CustomRegionGroupViewModel.CustomRegions.Count > 0)
                        {
                            <td>Model.CustomRegionGroupViewModel.CustomRegions.Count</td>
                        }
                        <td><input type="button" value="Save" class="save-changes-button btn btn-dark" /></td>
                    </tr>
                </tbody>
            </table>
            <div class="edit-info-container">
                <table class="table-header table" data-deleteurl="@Url.Action("DeleteRegionGroup", "Home")" data-deleteentryurl="@Url.Action("DeleteEntry", "Home")" data-addurl="@Url.Action("SaveEntireRegion", "Home")">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col">Region</th>
                            <th scope="col">Country</th>
                            <th scope="col">State</th>
                            <th scope="col">City</th>
                            <th scope="col">Airport</th>
                            <th scope="col">Remove</th>
                        </tr>
                    </thead>
                    @if (Model.CustomRegionGroupViewModel.CustomRegions.Count > 0)
                    {
                        foreach (var entry in Model.CustomRegionGroupViewModel.CustomRegions)
                        {
                            <tbody>
                                <tr class="single-region-entry" entryId="@entry.ID">
                                    <td>@entry.Region.Name</td>
                                    <td>@entry.Country.Name</td>
                                    <td>@entry.State.Name</td>
                                    <td>@entry.City.Name</td>
                                    <td>@entry.Airport.Name</td>
                                    <td>
                                        <input type="button" value="Delete" class="delete-button btn btn-dark" />
                                    </td>
                                </tr>
                            </tbody>
                        }
                    }
                    <tfoot>
                        <tr class="add-region-row" data-autourl="@Url.Action("AutoComplete", "Home")">
                            <td>
                                @Html.TextBoxFor(m => m.NewRegion, new { placeholder = "Region", @class = "region-text-box new-entry-input form-control", Name = "region-box", autotype = "region" })
                                <div class="region-autocomplete"></div>
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.NewCountry.Name, new { placeholder = "Country", @class = "country-text-box new-entry-input form-control", Name = "country-box", autotype = "country" })
                                <div class="country-autocomplete"></div>
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.NewState.Name, new { placeholder = "State", @class = "state-text-box new-entry-input form-control", Name = "state-box", autotype = "state" })
                                <div class="state-autocomplete"></div>
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.NewCity.Name, new { placeholder = "City", @class = "city-text-box new-entry-input form-control", Name = "city-box", autotype = "city" })
                                <div class="city-autocomplete"></div>
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.NewAirport.Name, new { placeholder = "Airport", @class = "airport-text-box new-entry-input form-control", Name = "airport-box", autotype = "airport" })
                                <div class="airport-autocomplete"></div>
                            </td>
                            <td><input type="button" value="Add" class="add-button btn btn-dark" /></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        }
    </div>
</div>
